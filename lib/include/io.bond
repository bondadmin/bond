namespace Bond
{
native
{

namespace IO
{
	enum Flags
	{
		BoolAlpha = 1 << 0,
		ShowBase = 1 << 1,
		ShowPoint = 1 << 2,
		Zero = 1 << 3,
		Dec = 1 << 4,
		Hex = 1 << 5,
		Oct = 1 << 6,
		Fixed = 1 << 7,
		Scientific = 1 << 8,
		Left = 1 << 9,
	};

	enum Constants
	{
		EOF = -1
	};
}

struct InputStream
{
	// Formatted input.
	void ScanStr(char *str, uint bufferSize);
	bool ScanB();
	char ScanC();
	int ScanI();
	uint ScanUI();
	long ScanL();
	ulong ScanUL();
	float ScanF();
	double ScanD();

	// Unformatted input.
	int Get();
	uint Read(uchar *bytes, uint numBytes);

	// Flags and formatting options.
	int GetFlags() const;
	InputStream *SetFlags(int flags);
	InputStream *UnsetFlags(int flags);
	InputStream *ClearFlags(int flags);

	// Stream position.
	int GetPosition() const;
	void SetPosition(int offset);
	void SetPositionFromEnd(int offset);
	void AddOffset(int offset);
};

struct OutputStream
{
	// Formatted output.
	OutputStream *PrintStr(const char *str);
	OutputStream *PrintB(bool value);
	OutputStream *PrintC(char value);
	OutputStream *PrintI(int value);
	OutputStream *PrintUI(uint value);
	OutputStream *PrintL(long value);
	OutputStream *PrintUL(ulong value);
	OutputStream *PrintF(float value);
	OutputStream *PrintD(double value);

	// Unformatted output.
	OutputStream *Put(uchar byte);
	OutputStream *Write(uchar *bytes, uint numBytes);

	// Flags and formatting options.
	int GetFlags() const;
	OutputStream *SetFlags(int flags);
	OutputStream *UnsetFlags(int flags);
	OutputStream *ClearFlags(int flags);

	int GetPrecision() const;
	OutputStream *SetPrecision(int flags);

	int GetWidth() const;
	OutputStream *SetWidth(int flags);

	// Stream position.
	int GetPosition() const;
	void SetPosition(int offset);
	void SetPositionFromEnd(int offset);
	void AddOffset(int offset);
};

InputStream *StdIn();
OutputStream *StdOut();
OutputStream *StdErr();

}
}
